Tareas para agregar relación 1 a 1. 
Objetivo: Agregar la funcionalidad que permita relacinoar un usuario con su perfil. 

1) Definir las tablas users y profiles (es importante respetar la convención de nombres de 
modelos en ingles y singular  'User.java' por eje. y el nombre de la tabla asociada en plural
'users'). Esta convención es utiliza por ActiveJDBC (nuestro ORM).
Las tablas se definen dentro de squeme.sql ( ahí encontramos el sql de definición de la bd y
tablas).

* Tener en cuenta las claves foraneas que enlazan los modelos. En este caso 
la tabla tiene users se define:


            CREATE TABLE users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username TEXT NOT NULL UNIQUE,      -- Nombre de usuario para login
                password TEXT NOT NULL        -- Contraseña hasheada
            );

            CREATE TABLE profiles (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                email TEXT NOT NULL,
                name TEXT NOT NULL,
                rol integer NOT NULL,
                dni TEXT UNIQUE NOT NULL,
                user_id INTEGER UNIQUE NOT NULL, 
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE -- Opcional: ON DELETE CASCADE

            );

            


2) Definir los modelos User.java y Profile.java  dentro de la carpeta models del proyecto.
 


@Table("users") // Esta anotación asocia explícitamente el modelo 'User' con la tabla 'users' en la DB.
public class User extends Model {

    // ActiveJDBC mapea automáticamente las columnas de la tabla 'users'
    // (como 'id', 'name', 'password', etc.) a los atributos de esta clase.
    // No necesitas declarar los campos (id, name, password) aquí como variables de instancia,
    // ya que la clase Model base se encarga de la interacción con la base de datos.

    // Opcional: Puedes agregar métodos getters y setters si prefieres un acceso más tipado,
    // aunque los métodos genéricos de Model (getString(), set(), getInteger(), etc.) ya funcionan.

    public String getName() {
        return getString("name"); // Obtiene el valor de la columna 'name'
    }

    public void setName(String name) {
        set("name", name); // Establece el valor para la columna 'name'
    }

    public String getPassword() {
        return getString("password"); // Obtiene el valor de la columna 'password'
    }

    public void setPassword(String password) {
        set("password", password); // Establece el valor para la columna 'password'
    }

}

 